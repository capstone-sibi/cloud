# Development stage
FROM node:18-alpine AS development

# Set the working directory
WORKDIR /usr/src/app

ARG DB_HOST
ARG DB_PORT
ARG DB_USER
ARG DB_DIALECT
ARG DB_PASS
ARG PORT
ARG DB_NAME
ARG CLOUD_STORAGE_CREDENTIALS
ARG TTS_CREDENTIALS
ARG CICD_CREDENTIALS
ARG BUCKET_NAME
ARG GCP_PROJECT_ID
ARG GCP_ARTIFACT_NAME

ENV DB_HOST=$DB_HOST
ENV DB_PORT=$DB_PORT
ENV DB_USER=$DB_USER
ENV DB_PASS=$DB_PASS
ENV PORT=$PORT
ENV DB_DIALECT=$DB_DIALECT
ENV DB_NAME=$DB_NAME
ENV CLOUD_STORAGE_CREDENTIALS=$CLOUD_STORAGE_CREDENTIALS
ENV TTS_CREDENTIALS=$TTS_CREDENTIALS
ENV CICD_CREDENTIALS=$CICD_CREDENTIALS
ENV BUCKET_NAME=$BUCKET_NAME
ENV GCP_PROJECT_ID=$GCP_PROJECT_ID
ENV GCP_ARTIFACT_NAME=$GCP_ARTIFACT_NAME

# Copy package.json and yarn.lock first to leverage Docker cache
COPY package*.json yarn.lock ./

# Install dependencies
RUN yarn install

# Copy the rest of your application's code
COPY . .

# Compile TypeScript to JavaScript
RUN yarn build

EXPOSE 8080

# Start the application
CMD [ "node", "dist/main.js" ]
